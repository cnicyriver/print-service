// Generated by CoffeeScript 1.7.1
(function() {
  var async, cluster, curlify, dbname, host, i, moment, nconf, orm, paging, password, restify, user, _i, _ref;

  cluster = require('cluster');

  orm = require('orm');

  moment = require('moment');

  nconf = require('./lib/nconf');

  restify = require('restify');

  curlify = require('request-as-curl');

  async = require('async');

  paging = require('./lib/paging');

  if (cluster.isMaster) {
    require('./lib/printTask')();
    cluster.on('exit', function(worker) {
      return cluster.fork();
    });
    for (i = _i = 1, _ref = require('os').cpus().length; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
      cluster.fork();
    }
    return;
  }

  user = nconf.get('mysql:user');

  password = nconf.get('mysql:password');

  host = nconf.get('mysql:host');

  dbname = nconf.get('mysql:dbname');

  orm.connect("mysql://" + user + ":" + password + "@" + host + "/" + dbname, function(err, db) {
    var server, serverParams;
    if (err) {
      console.log('Cannot connect to Mysql.');
      throw err;
    }
    db.settings.set('connection.debug', true);
    serverParams = {};
    server = restify.createServer(serverParams);
    server.use(restify.gzipResponse());
    server.use(restify.authorizationParser());
    server.use(restify.bodyParser({
      mapParams: false
    }));
    server.use(restify.queryParser());
    server.use(function(req, res, next) {
      req.db = db;
      req.models = db.models;
      return next();
    });
    server.use(restify.CORS());
    server.use(restify.fullResponse());
    server.use(paging.supportPagination);
    server.on('uncaughtException', function(req, res, route, error) {
      console.log('Uncaught exception in ' + route.method + ' ' + route.path + ':');
      console.log(error);
      return res.send('server error.');
    });
    server.listen(nconf.get('server:port'), function() {
      return console.log("" + server.name + " listening at " + server.url);
    });
    require('./lib/printTask')(db);
    require('./models/print_log')(db);
    require('./models/print_manage')(db);
    return require('./routes/service.print')(server);
  });

}).call(this);

//# sourceMappingURL=main.js.map